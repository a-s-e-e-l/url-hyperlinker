name: Release

on:
    push:
        branches: [main]
    workflow_dispatch:

permissions:
    contents: write

concurrency:
    group: release-${{ github.ref }}
    cancel-in-progress: false

jobs:
    build-and-release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Install jq
              run: sudo apt-get update && sudo apt-get install -y jq

            - name: Install deps
              run: npm ci

            - name: Build
              run: npm run build

            - name: Read version from manifest
              id: version
              run: echo "version=$(jq -r .version manifest.json)" >> $GITHUB_OUTPUT

            - name: Zip dist contents
              run: |
                  cd dist
                  zip -r ../url-hyperlinker-${{ steps.version.outputs.version }}.zip .
                  cd -

            - name: Restore CRX private key
              shell: bash
              run: |
                  echo "${{ secrets.PRIVATE_KEY_BASE64 }}" | base64 -d > private.pem
                  chmod 600 private.pem

            - name: Install crx3
              run: npm i -g crx3

            - name: Pack CRX with stable key
              run: crx3 dist --key private.pem -o url-hyperlinker.crx

            - name: Create GitHub Release (auto-creates tag if missing)
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: v${{ steps.version.outputs.version }}
                  target_commitish: ${{ github.sha }}
                  name: Release v${{ steps.version.outputs.version }}
                  body: Auto release
                  draft: false
                  prerelease: false
                  generate_release_notes: true
                  files: |
                      url-hyperlinker-${{ steps.version.outputs.version }}.zip
                      url-hyperlinker.crx
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
